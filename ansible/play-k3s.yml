---

# Read hosts from the Terraform outputs.
- hosts: localhost
  tags: [always]
  tasks:
  - name: Read Terraform outputs
    set_fact:
      _terraform_outputs: "{{ lookup('cloud.terraform.tf_output', binary_path=tf_binary, project_path=tf_project_path) }}"
      tf_project_path: "{{ tf_project_path }}"
    vars:
      tf_binary: "{{ 'tofu'|which }}"
      tf_project_path: "{{ (playbook_dir, '..', '..', 'terraform', 'clusters')|path_join }}"
  
  - name: Add k3s leaders
    add_host:
      name: "{{ item['name'] }}"
      groups: [k3s, k3s_leaders]
      ansible_host: "{{ item['ip'] }}"
      ansible_user: "{{ item['user'] }}"
      ansible_python_interpreter: /usr/bin/python3
      tf_project_path: "{{ tf_project_path }}"
      tf_state_outputs: "{{ _terraform_outputs }}"
    loop: "{{ _terraform_outputs['k3s_leaders_inventory']['value'] }}"
    changed_when: false

  - name: Add k3s workers
    add_host:
      name: "{{ item['name'] }}"
      groups: [k3s, k3s_workers, "k3s_workers_{{ item['worker_pool'] }}"]
      ansible_host: "{{ item['ip'] }}"
      ansible_user: "{{ item['user'] }}"
      ansible_python_interpreter: /usr/bin/python3
      k3s_worker_pool: "{{ item['worker_pool'] }}"
      tf_project_path: "{{ tf_project_path }}"
      tf_state_outputs: "{{ _terraform_outputs }}"
    loop: "{{ _terraform_outputs['k3s_workers_inventory']['value'] }}"
    changed_when: false

  - name: Add k3s support
    add_host:
      name: "{{ item['name'] }}"
      groups: [k3s_support]
      ansible_host: "{{ item['ip'] }}"
      ansible_user: "{{ item['user'] }}"
      ansible_python_interpreter: /usr/bin/python3
      tf_project_path: "{{ tf_project_path }}"
      tf_state_outputs: "{{ _terraform_outputs }}"
    loop: "{{ _terraform_outputs['k3s_support_inventory']['value'] }}"
    changed_when: false

- ansible.builtin.import_playbook: "play-base.yml"
  tags: [base]
  vars:
    base_tailscale_up_skip: false

- hosts: all
  become: yes
  tags: [k3s, extras]
  roles:
  - role: k3s

  post_tasks:
  - name: Print support node address
    debug:
      msg: "Support node is available at {{ hostvars[groups['k3s_support'][0]]['ansible_host'] }}"

- hosts: all:!k3s_support
  become: yes
  tags: [k3s]
  roles:
  - role: xanmanning.k3s
    vars:
      k3s_become: true
      k3s_state: installed
      k3s_release_version: false
      k3s_registration_address: "{{ hostvars[groups['k3s_support'][0]]['ansible_host'] }}"
      k3s_service_requires:
      - tailscaled.service
      - docker.service
      - cloud-final.service

- hosts: "{{ groups['k3s_leaders'][0] }}"
  become: yes
  tasks:
  - name: Fetch kubeconfig
    ansible.builtin.slurp:
      src: "/etc/rancher/k3s/k3s.yaml"
    register: kubeconfig

  - name: Make local .kube dir
    become: no
    delegate_to: localhost
    ansible.builtin.file:
      path: "~/.kube"
      state: directory
      mode: 0700
      recurse: true

  - name: Add local kubectl config
    become: no
    delegate_to: localhost
    ansible.builtin.copy:
      content: "{{ kubeconfig['content'] | b64decode | regex_replace('https://127.0.0.1', 'https://' + support_address) }}"
      dest: "~/.kube/config-{{ inventory_hostname }}"
      mode: 0600
    vars:
      support_address: "{{ hostvars[groups['k3s_support'][0]]['ansible_host'] }}"
    when:
    - kubeconfig is success
